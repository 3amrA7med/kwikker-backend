CREATE TABLE KWEEK_SEARCH_TOKENS (
	KWEEK_ID INT PRIMARY KEY,
	TOKENS TSVECTOR NOT NULL,
	FOREIGN KEY(KWEEK_ID) REFERENCES KWEEK ON DELETE CASCADE
);

CREATE TEXT SEARCH DICTIONARY english_stem_nostop (
    Template = snowball
    , Language = english
);

CREATE TEXT SEARCH CONFIGURATION public.english_nostop ( COPY = pg_catalog.english );
ALTER TEXT SEARCH CONFIGURATION public.english_nostop
ALTER MAPPING FOR asciiword, asciihword, hword_asciipart, hword, hword_part, word WITH english_stem_nostop;


CREATE FUNCTION INSERT_KWEEK_TOKENS() RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO KWEEK_SEARCH_TOKENS (KWEEK_ID, TOKENS)
    VALUES (NEW.ID, TO_TSVECTOR('english_nostop', NEW.TEXT))
    ON CONFLICT (KWEEK_ID) DO NOTHING;
    RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER INSERT_KWEEK_TOKENS_ON_INSERT_KWEEK
AFTER INSERT ON KWEEK
FOR EACH ROW
EXECUTE PROCEDURE INSERT_KWEEK_TOKENS();